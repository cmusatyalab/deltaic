#!/usr/bin/env python

from optparse import OptionParser
import os
import subprocess
import sys

def sync_host(host, root_dir, mounts, exclude=(), verbose=False):
    args = ['rsync', '-aHAXRx', '--fake-super', '--delete',
            '--delete-excluded', '--numeric-ids', '--stats', '--partial']
    if verbose:
        args.append('-i')
    args.extend(['--exclude=' + r for r in exclude])
    args.extend(['root@%s:%s' % (host, mount.rstrip('/') or '/')
            for mount in mounts])
    args.append(root_dir.rstrip('/'))

    print ' '.join(args)
    ret = subprocess.call(args)
    if ret not in (0, 24):
        raise Exception('rsync failed with code %d' % ret)


if __name__ == '__main__':
    parser = OptionParser(usage='Usage: %prog [options] <host> <out_dir>')
    parser.add_option('-m', '--mount', dest='mounts', action='append',
            help='filesystem mount point to copy (can be repeated)')
    parser.add_option('-v', '--verbose', dest='verbose', action='store_true',
            help='show progress')
    parser.add_option('-x', '--exclude', dest='exclude', action='append',
            default=[],
            help='rsync exclude pattern (can be repeated)')

    (opts, args) = parser.parse_args()
    try:
        host, root_dir = args[0:2]
    except ValueError:
        parser.error('Missing argument')

    sync_host(host, root_dir, opts.mounts, opts.exclude, verbose=opts.verbose)
