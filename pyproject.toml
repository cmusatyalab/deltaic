# SPDX-FileCopyrightText: 2021 Carnegie Mellon University
# SPDX-License-Identifier: GPL-2.0-only

[tool.poetry]
name = "deltaic"
version = "0.1.3"
description = "Efficient backup system supporting multiple data sources"
authors = [
    "Benjamin Gilbert <bgilbert@cs.cmu.edu>",
    "Jan Harkes <jaharkes@cs.cmu.edu>",
]
license = "GPL-2.0-only"
readme = "README.md"
homepage = "https://github.com/cmusatyalab/deltaic"
repository = "https://github.com/cmusatyalab/deltaic.git"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: No Input/Output (Daemon)",
    "Intended Audience :: System Administrators",
    "Operating System :: POSIX :: Linux",
    "Topic :: System :: Archiving :: Backup",
]
include = [
    { path = "CONTRIBUTING.md", format = "sdist" },
    { path = "COPYING", format = "sdist" },
    { path = "LICENSES/*", format = "sdist" },
    { path = "example-config.yaml", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.7"
boto = ">= 2.23.0"
click = "^8.0.3"
click-plugins = "^1.1.1"
"github3.py" = ">= 0.9.0, < 1.0.0"
google-api-python-client = "^2.32.0"
oauth2client = "^4.1.3"
pybloom-live = "^3.1.0"
python-dateutil = "^2.8.2"
PyYAML = "^6.0"
xattr = "^0.9.8"

[tool.poetry.dev-dependencies]
pre-commit = "^2.16.0"
invoke = "^1.6.0"

[tool.poetry.scripts]
deltaic = "deltaic.cli:deltaic_cli"
dt-askpass = "deltaic.cli:askpass"

[tool.poetry.plugins."deltaic.lowlevel"]
coda = "deltaic.sources.coda:coda"
github = "deltaic.sources.github:github"
googledrive = "deltaic.archivers.googledrive:googledrive"
rbd = "deltaic.sources.rbd:rbd"
rgw = "deltaic.sources.rgw:rgw"
rsync = "deltaic.sources.rsync:rsync"

[tool.poetry.plugins."deltaic.sources"]
coda = "deltaic.sources.coda:CodaSource"
github = "deltaic.sources.github:GitHubSource"
rbd = "deltaic.sources.rbd:RBDSource"
rgw = "deltaic.sources.rgw:RGWSource"
rsync = "deltaic.sources.rsync:RsyncSource"

[tool.poetry.plugins."deltaic.archivers"]
aws = "deltaic.archivers.aws:AWSArchiver"
googledrive = "deltaic.archivers.googledrive:DriveArchiver"

[tool.isort]
py_version = 36
profile = "black"

[tool.black]
target-version = ["py36"]

[tool.mypy]
check_untyped_defs = true
files = "src"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
